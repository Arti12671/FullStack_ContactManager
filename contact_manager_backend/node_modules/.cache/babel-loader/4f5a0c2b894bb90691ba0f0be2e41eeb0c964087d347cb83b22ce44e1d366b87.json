{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT-A1\\\\contact_manager\\\\src\\\\Task\\\\View.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport WeatherService from './WeatherService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst View = () => {\n  _s();\n  let [state, setState] = useState({\n    loading: false,\n    temperature: [],\n    errorMessage: \"\"\n  });\n  useEffect(() => {\n    let promise = new Promise((res, rej) => {\n      setState({\n        ...state,\n        loading: true\n      });\n      let response = WeatherService.getData();\n      res(response);\n    });\n    promise.then(re1 => {\n      setState({\n        ...state,\n        loading: false,\n        temperature: re1.data\n      });\n    }).catch(() => {\n      setState({\n        ...state,\n        loading: false,\n        errorMessage: alert(\"data is not available\")\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(View, \"VeetRMTTRmkSs/y8prftSpGVlw8=\");\n_c = View;\nexport default View;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["React","useEffect","useState","WeatherService","jsxDEV","_jsxDEV","View","_s","state","setState","loading","temperature","errorMessage","promise","Promise","res","rej","response","getData","then","re1","data","catch","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/REACT-A1/contact_manager/src/Task/View.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport WeatherService from './WeatherService'\r\n\r\nconst View = () => {\r\n    let [state, setState] = useState({\r\n        loading: false,\r\n        temperature: [],\r\n        errorMessage: \"\"\r\n    })\r\n    useEffect(()=>{\r\n        let promise=new Promise((res, rej)=>{\r\n            setState({...state, loading:true})\r\n            let response=WeatherService.getData()\r\n            res(response)\r\n        })\r\n        promise.then((re1)=>{\r\n            setState({...state, loading:false, temperature:re1.data})\r\n        }).catch(()=>{\r\n            setState({...state, loading:false, errorMessage:alert(\"data is not available\")})\r\n        })\r\n    },[])\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {\r\n                        \r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default View"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC;IAC7BQ,OAAO,EAAE,KAAK;IACdC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFX,SAAS,CAAC,MAAI;IACV,IAAIY,OAAO,GAAC,IAAIC,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAG;MAChCP,QAAQ,CAAC;QAAC,GAAGD,KAAK;QAAEE,OAAO,EAAC;MAAI,CAAC,CAAC;MAClC,IAAIO,QAAQ,GAACd,cAAc,CAACe,OAAO,CAAC,CAAC;MACrCH,GAAG,CAACE,QAAQ,CAAC;IACjB,CAAC,CAAC;IACFJ,OAAO,CAACM,IAAI,CAAEC,GAAG,IAAG;MAChBX,QAAQ,CAAC;QAAC,GAAGD,KAAK;QAAEE,OAAO,EAAC,KAAK;QAAEC,WAAW,EAACS,GAAG,CAACC;MAAI,CAAC,CAAC;IAC7D,CAAC,CAAC,CAACC,KAAK,CAAC,MAAI;MACTb,QAAQ,CAAC;QAAC,GAAGD,KAAK;QAAEE,OAAO,EAAC,KAAK;QAAEE,YAAY,EAACW,KAAK,CAAC,uBAAuB;MAAC,CAAC,CAAC;IACpF,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EACL,oBACIlB,OAAA;IAAAmB,QAAA,eACInB,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAD,QAAA,eACtBnB,OAAA;QAAKoB,SAAS,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAtB,EAAA,CA7BKD,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AA+BV,eAAeA,IAAI;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}